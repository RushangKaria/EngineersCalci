################################################ STEP 1 #######################################################

				INPUT THE MATRIX AND COMPUTE THE DETERMINANT AND CROSS PRODUCT



PROGRAM SNIPPET:
---------------------------------------------------------------------------------------------------------------------

	void fill_matrix()throws IOException
	{
		for(int i=0;i<3;i++)			//take the input from the user
			for(int j=0;j<3;j++)
			{
			System.out.println("Enter the element at index ["+i+","+j+"]:");
			a[i][j]=Integer.parseInt(input.readLine());
			}
	}

	int calculate_determinant()
	{
	int x=0;

		int x1=determinant(splitMatrix(0));	
		int x2=determinant(splitMatrix(1));
		int x3=determinant(splitMatrix(2));

#########################################################################################################

		for a 3x3 matrix say A=	|a b c|
					|d e f|
					|g h i|
     
	
		determinant A= (a)|e f|-(b)|d f|+(c)|d e|
				  |h i|    |g i|    |g h|
				    ^        ^        ^
				    X1       X2       X3
###########################################################################################################

			x=a[0][0]*x1+a[0][1]*(-1)*x2+a[0][2]*x3;

	return x;
	}

	int determinant(int a[][])
	{
	int determinant=-1;
			/*
			DETERMINANT OF |A	B|
				       |C	D|====(AD-BC)
			*/

		determinant=(a[0][0]*a[1][1])-(a[0][1]*a[1][0]);	

	return determinant;
	}

	int [][] splitMatrix(int cut_column)
	{
	int x,y;
	x=0;
	y=0;
		int b[][]=new int[2][2];

###################################################################################################################

		for a 3x3 matrix say A=	|a b c|  if we need to cut it into 2x2...the first row is always cut off
					|d e f|  the particular 'j' column is  cut off..so we can say that i=0
					|g h i|  will never appear and if j matches the cut_column simply continue

###################################################################################################################

		for(int i=1;i<3;i++)
			for(int j=0;j<3;j++)
				if(j==cut_column)
				continue;
				else
				{
				//System.out.println("b["+x+"]["+y+"]="+a[i][j]);  DEBUGGING
	
				b[x][y++]=a[i][j];	/* this is tricky since we are converting 3x3 into 2x2
							   notice j is 3 valued but i is 2 valued...thus j will
							   cause an out of bounds exception but i wont..also we
							   cannot simply include b[i][j]=a[i][j] since a matrix
							   is to be filled in a particular order and due to the 
							   continue statement some values may get missed..thus 
							   two new variables to take care of the situation
							*/
							
					if(y>1)		/* y>=1 causes error...since if y>=1 was there each time 
					{		   y=0++ executed it would be reset to 0..that is y=1 and
					y=0;		   therefore b[i][1] would always be zero..this inturn 
					x=1;		   would ripple and make the determinant zero
					}  		*/
				}
/* #########################DEBUGGING##############################

	System.out.println("=========================");
	for(int i=0;i<2;i++)
	{
		for(int j=0;j<2;j++)
		System.out.print(b[i][j]+"  ");

	System.out.println("");
	}

################################################################ */ 

	return b;
	}
------------------------------------------------------------------------------------------------------------------------